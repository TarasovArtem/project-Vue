{"remainingRequest":"/home/artem/project-Vue/todo-vue/node_modules/babel-loader/lib/index.js!/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/artem/project-Vue/todo-vue/src/components/TodoList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/artem/project-Vue/todo-vue/src/components/TodoList.vue","mtime":1538168278876},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'todo-list',\n  data: function data() {\n    return {\n      newTodo: '',\n      idForTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [{\n        id: 1,\n        title: 'First Task',\n        completed: false,\n        editing: false\n      }, {\n        id: 2,\n        title: 'Second Task',\n        completed: false,\n        editing: false\n      }]\n    };\n  },\n  computed: {\n    remaining: function remaining() {\n      return this.todos.filter(function (todo) {\n        return !todo.completed;\n      }).length;\n    },\n    anyRemaining: function anyRemaining() {\n      return this.remaining !== 0;\n    },\n    todosFiltered: function todosFiltered() {\n      if (this.filter === 'all') {\n        return this.todos;\n      } else if (this.filter === 'active') {\n        return this.todos.filter(function (todo) {\n          return !todo.completed;\n        });\n      } else if (this.filter === 'completed') {\n        return this.todos.filter(function (todo) {\n          return todo.completed;\n        });\n      }\n\n      return this.todos;\n    },\n    showClearCompletedButton: function showClearCompletedButton() {\n      return this.todos.filter(function (todo) {\n        return todo.completed;\n      }).length > 0;\n    }\n  },\n  directives: {\n    focus: {\n      inserted: function inserted(el) {\n        el.focus();\n      }\n    }\n  },\n  methods: {\n    addTodo: function addTodo() {\n      if (this.newTodo.trim().length === 0) {\n        return;\n      }\n\n      this.todos.push({\n        id: this.idForTodo,\n        title: this.newTodo,\n        completed: false\n      });\n      this.newTodo = '';\n      this.idForTodo++;\n    },\n    editTodo: function editTodo(todo) {\n      this.beforeEditCache = todo.title;\n      todo.editing = true;\n    },\n    doneEdit: function doneEdit(todo) {\n      if (todo.title.trim() === ' ') {\n        todo.title = this.beforeEditCache;\n      }\n\n      todo.editing = false;\n    },\n    cancelEdit: function cancelEdit(todo) {\n      todo.title = this.beforeEditCache;\n      todo.editing = false;\n    },\n    removeTodo: function removeTodo(index) {\n      this.todos.splice(index, 1);\n    },\n    checkAllTodos: function checkAllTodos() {\n      this.todos.forEach(function (todo) {\n        return todo.completed = event.target.checked;\n      });\n    },\n    clearCompleted: function clearCompleted() {\n      this.todos = this.todos.filter(function (todo) {\n        return !todo.completed;\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,eAAA;AACA,QAAA,WADA;AAEA,MAFA,kBAEA;AACA,WAAA;AACA,eAAA,EADA;AAEA,iBAAA,CAFA;AAGA,uBAAA,EAHA;AAIA,cAAA,KAJA;AAKA,aAAA,CACA;AACA,YAAA,CADA;AAEA,eAAA,YAFA;AAGA,mBAAA,KAHA;AAIA,iBAAA;AAJA,OADA,EAOA;AACA,YAAA,CADA;AAEA,eAAA,aAFA;AAGA,mBAAA,KAHA;AAIA,iBAAA;AAJA,OAPA;AALA,KAAA;AAoBA,GAvBA;AAwBA,YAAA;AACA,aADA,uBACA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AAAA,eAAA,CAAA,KAAA,SAAA;AAAA,OAAA,EAAA,MAAA;AACA,KAHA;AAIA,gBAJA,0BAIA;AACA,aAAA,KAAA,SAAA,KAAA,CAAA;AACA,KANA;AAOA,iBAPA,2BAOA;AACA,UAAA,KAAA,MAAA,KAAA,KAAA,EAAA;AACA,eAAA,KAAA,KAAA;AACA,OAFA,MAEA,IAAA,KAAA,MAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AAAA,iBAAA,CAAA,KAAA,SAAA;AAAA,SAAA,CAAA;AACA,OAFA,MAEA,IAAA,KAAA,MAAA,KAAA,WAAA,EAAA;AACA,eAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AAAA,iBAAA,KAAA,SAAA;AAAA,SAAA,CAAA;AACA;;AAEA,aAAA,KAAA,KAAA;AACA,KAjBA;AAkBA,4BAlBA,sCAkBA;AACA,aAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AAAA,eAAA,KAAA,SAAA;AAAA,OAAA,EAAA,MAAA,GAAA,CAAA;AACA;AApBA,GAxBA;AA+CA,cAAA;AACA,WAAA;AACA,gBAAA,kBAAA,EAAA,EAAA;AACA,WAAA,KAAA;AACA;AAHA;AADA,GA/CA;AAsDA,WAAA;AACA,WADA,qBACA;AACA,UAAA,KAAA,OAAA,CAAA,IAAA,GAAA,MAAA,KAAA,CAAA,EAAA;AACA;AACA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA;AACA,YAAA,KAAA,SADA;AAEA,eAAA,KAAA,OAFA;AAGA,mBAAA;AAHA,OAAA;AAMA,WAAA,OAAA,GAAA,EAAA;AACA,WAAA,SAAA;AACA,KAbA;AAcA,YAdA,oBAcA,IAdA,EAcA;AACA,WAAA,eAAA,GAAA,KAAA,KAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KAjBA;AAkBA,YAlBA,oBAkBA,IAlBA,EAkBA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,OAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA,eAAA;AACA;;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAvBA;AAwBA,cAxBA,sBAwBA,IAxBA,EAwBA;AACA,WAAA,KAAA,GAAA,KAAA,eAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KA3BA;AA4BA,cA5BA,sBA4BA,KA5BA,EA4BA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;AACA,KA9BA;AA+BA,iBA/BA,2BA+BA;AACA,WAAA,KAAA,CAAA,OAAA,CAAA;AAAA,eAAA,KAAA,SAAA,GAAA,MAAA,MAAA,CAAA,OAAA;AAAA,OAAA;AACA,KAjCA;AAkCA,kBAlCA,4BAkCA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,CAAA;AAAA,eAAA,CAAA,KAAA,SAAA;AAAA,OAAA,CAAA;AACA;AApCA;AAtDA,CAAA","sourcesContent":["<template>\n    <div>\n        <input type=\"text\" class=\"todo-input\"  v-model=\"newTodo\" @keyup.enter=\"addTodo\" placeholder=\"What needs to be done\">\n        <transition-group name=\"fade\" enter-active-class=\"animated fadeInUp\" leave-active-class=\"animated fadeOutDown\">\n        <div v-for=\"(todo, index) in todosFiltered\" :key=\"todo.id\" class=\"todo-item\">\n            <div class=\"todo-item-left\">\n              <input type=\"checkbox\" v-model=\"todo.completed\">\n              <div v-if=\"!todo.editing\" @dblclick=\"editTodo(todo)\" class=\"todo-item-label\" :class=\"{ completed : todo.completed }\">\n                {{ todo.title }}</div>\n              <input v-else class=\"todo-item-edit\" type=\"text\" v-model=\"todo.title\" @blur=\"doneEdit(todo)\" @keyup.enter=\"doneEdit(todo)\" @keyup.esc=\"cancelEdit(todo)\" v-focus>\n            </div>\n            <div class=\"remove-item\" @click=\"removeTodo(index)\">\n              &times;\n            </div>\n        </div>\n        </transition-group>\n\n        <div class=\"extra-container\">\n          <div><label><input type=\"checkbox\" :checked=\"!anyRemaining\" @change=\"checkAllTodos\"> Check All</label></div>\n          <div>{{ remaining }} items left</div>\n        </div>\n\n        <div class=\"extra-container\">\n          <div>\n          <button :class=\"{ active: filter === 'all' }\" @click=\"filter = 'all'\"> All</button>\n          <button :class=\"{ active: filter === 'active' }\" @click=\"filter = 'active'\">Active</button>\n          <button :class=\"{ active: filter === 'completed' }\" @click=\"filter = 'completed'\">Completed</button>\n          </div>\n\n          <div>\n            <transition name=\"fade\">\n            <button v-if=\"showClearCompletedButton\" @click=\"clearCompleted\">Clear Completed</button>   \n            </transition> \n          </div>\n          \n        </div>\n      </div>\n</template>\n\n<script>\nexport default {\n  name: 'todo-list',\n  data() {\n    return {\n      newTodo: '',\n      idForTodo: 3,\n      beforeEditCache: '',\n      filter: 'all',\n      todos: [\n        {\n          id: 1,\n          title: 'First Task',\n          completed: false,\n          editing: false,\n        },\n        {\n          id: 2,\n          title: 'Second Task',\n          completed: false,\n          editing: false,\n        },\n      ],\n    };\n  },\n  computed: {\n    remaining() {\n      return this.todos.filter(todo => !todo.completed).length;\n    },\n    anyRemaining() {\n      return this.remaining !== 0;\n    },\n    todosFiltered() {\n      if (this.filter === 'all') {\n        return this.todos;\n      } else if (this.filter === 'active') {\n        return this.todos.filter(todo => !todo.completed);\n      } else if (this.filter === 'completed') {\n        return this.todos.filter(todo => todo.completed);\n      }\n\n      return this.todos;\n    },\n    showClearCompletedButton() {\n      return this.todos.filter(todo => todo.completed).length > 0;\n    },\n  },\n\n  directives: {\n    focus: {\n      inserted: function(el) {\n        el.focus();\n      },\n    },\n  },\n  methods: {\n    addTodo() {\n      if (this.newTodo.trim().length === 0) {\n        return;\n      }\n      this.todos.push({\n        id: this.idForTodo,\n        title: this.newTodo,\n        completed: false,\n      });\n\n      this.newTodo = '';\n      this.idForTodo++;\n    },\n    editTodo(todo) {\n      this.beforeEditCache = todo.title;\n      todo.editing = true;\n    },\n    doneEdit(todo) {\n      if (todo.title.trim() === ' ') {\n        todo.title = this.beforeEditCache;\n      }\n      todo.editing = false;\n    },\n    cancelEdit(todo) {\n      todo.title = this.beforeEditCache;\n      todo.editing = false;\n    },\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n    },\n    checkAllTodos() {\n      this.todos.forEach(todo => (todo.completed = event.target.checked));\n    },\n    clearCompleted() {\n      this.todos = this.todos.filter(todo => !todo.completed);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import url('https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css');\n\n.todo-input {\n  width: 100%;\n  padding: 10px 18px;\n  font-size: 18px;\n  margin-bottom: 16px;\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n.todo-item {\n  margin-bottom: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  animation-duration: 0.3s;\n}\n\n.remove-item {\n  cursor: pointer;\n  margin-left: 14px;\n  &:hover {\n    color: black;\n  }\n}\n\n.todo-item-left {\n  display: flex;\n  align-items: center;\n}\n\n.todo-item-label {\n  padding: 10px;\n  border: 1px solid white;\n  margin-left: 12px;\n}\n\n.todo-item-edit {\n  font-size: 24px;\n  color: #2c3e50;\n  margin-left: 12px;\n  width: 100%;\n  padding: 10px;\n  border: 1px solid #ccc;\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n\n  &:focus {\n    outline: none;\n  }\n}\n\n.completed {\n  text-decoration: line-through;\n  color: grey;\n}\n\n.extra-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 16px;\n  border-top: 1px solid lightgray;\n  padding-top: 14px;\n  margin-bottom: 14px;\n}\n\nbutton {\n  font-size: 14px;\n  background-color: white;\n  appearance: none;\n\n  &:hover {\n    background: lightgreen;\n    box-shadow: 2px 2px 7px 1px lightgreen;\n  }\n\n  &:focus {\n    outline: none;\n  }\n}\n\n.active {\n  outline: lightgreen;\n}\n\n// CSS transitions\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.2s;\n}\n\n.fade-enter,\n.fade-leave-to {\n  opacity: 0;\n}\n</style>\n"],"sourceRoot":"src/components"}]}