{"remainingRequest":"/home/artem/project-Vue/todo-vue/node_modules/babel-loader/lib/index.js!/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/artem/project-Vue/todo-vue/src/components/TodoItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/artem/project-Vue/todo-vue/src/components/TodoItem.vue","mtime":1539332529927},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'todo-item',\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      id: this.todo.id,\n      title: this.todo.title,\n      completed: this.todo.completed,\n      editing: this.todo.editing,\n      beforeEditCache: ''\n    };\n  },\n  methods: {\n    removeTodo: function removeTodo(index) {\n      this.$emit('removedTodo', index);\n    },\n    editTodo: function editTodo() {\n      this.beforeEditCache = this.title;\n      this.editing = true;\n    },\n    doneEdit: function doneEdit() {\n      if (this.title.trim() === ' ') {\n        this.title = this.beforeEditCache;\n      }\n\n      this.editing = false;\n      this.$emit('finishedEdit', {\n        'index': this.index,\n        'todo': {}\n      });\n    },\n    cancelEdit: function cancelEdit() {\n      this.title = this.beforeEditCache;\n      this.editing = false;\n    }\n  }\n};",{"version":3,"sources":["TodoItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA,eAAA;AACA,QAAA,WADA;AAEA,SAAA;AACA,UAAA;AACA,YAAA,MADA;AAEA,gBAAA;AAFA,KADA;AAKA,WAAA;AACA,YAAA,MADA;AAEA,gBAAA;AAFA;AALA,GAFA;AAYA,MAZA,kBAYA;AACA,WAAA;AACA,UAAA,KAAA,IAAA,CAAA,EADA;AAEA,aAAA,KAAA,IAAA,CAAA,KAFA;AAGA,iBAAA,KAAA,IAAA,CAAA,SAHA;AAIA,eAAA,KAAA,IAAA,CAAA,OAJA;AAKA,uBAAA;AALA,KAAA;AAOA,GApBA;AAqBA,WAAA;AACA,cADA,sBACA,KADA,EACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA;AACA,KAHA;AAIA,YAJA,sBAIA;AACA,WAAA,eAAA,GAAA,KAAA,KAAA;AACA,WAAA,OAAA,GAAA,IAAA;AACA,KAPA;AAQA,YARA,sBAQA;AACA,UAAA,KAAA,KAAA,CAAA,IAAA,OAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA,eAAA;AACA;;AACA,WAAA,OAAA,GAAA,KAAA;AACA,WAAA,KAAA,CAAA,cAAA,EAAA;AACA,iBAAA,KAAA,KADA;AAEA,gBAAA;AAFA,OAAA;AAMA,KAnBA;AAoBA,cApBA,wBAoBA;AACA,WAAA,KAAA,GAAA,KAAA,eAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA;AAvBA;AArBA,CAAA","sourcesContent":["<template>\n    <div class=\"todo-item\">\n       <div class=\"todo-item-left\">\n                <input type=\"checkbox\" v-model=\"completed\">\n\n                <div v-if=\"!editing\" @dblclick=\"editTodo\" class=\"todo-item-label\" :class=\"{ completed : completed }\">\n                    {{ title }}</div>\n\n                <input v-else class=\"todo-item-edit\" type=\"text\" v-model=\"title\" @blur=\"doneEdit\" @keyup.enter=\"doneEdit\" @keyup.esc=\"cancelEdit\" v-focus>\n        </div>\n        <div class=\"remove-item\" @click=\"removeTodo(index)\">\n              &times;\n        </div>\n    </div>\n</template>\n\n\n<script>\nexport default {\n  name: 'todo-item',\n  props: {\n    todo: {\n      type: Object,\n      required: true,\n    },\n    index: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      id: this.todo.id,\n      title: this.todo.title,\n      completed: this.todo.completed,\n      editing: this.todo.editing,\n      beforeEditCache: '',\n    };\n  },\n  methods: {\n    removeTodo(index) {\n      this.$emit('removedTodo', index);\n    },\n    editTodo() {\n      this.beforeEditCache = this.title;\n      this.editing = true;\n    },\n    doneEdit() {\n      if (this.title.trim() === ' ') {\n        this.title = this.beforeEditCache;\n      }\n      this.editing = false;\n      this.$emit('finishedEdit', {\n        'index': this.index,\n        'todo': {\n          \n        }\n      });\n    },\n    cancelEdit() {\n      this.title = this.beforeEditCache;\n      this.editing = false;\n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/components"}]}