{"remainingRequest":"/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/artem/project-Vue/todo-vue/src/components/TodoList.vue?vue&type=template&id=3de47834&","dependencies":[{"path":"/home/artem/project-Vue/todo-vue/src/components/TodoList.vue","mtime":1538155618947},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/artem/project-Vue/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":1537379365153},{"path":"/home/artem/project-Vue/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newTodo,\n            expression: \"newTodo\"\n          }\n        ],\n        staticClass: \"todo-input\",\n        attrs: { type: \"text\", placeholder: \"What needs to be done\" },\n        domProps: { value: _vm.newTodo },\n        on: {\n          keyup: function($event) {\n            if (\n              !(\"button\" in $event) &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.addTodo($event)\n          },\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newTodo = $event.target.value\n          }\n        }\n      }),\n      _vm._l(_vm.todosFiltered, function(todo, index) {\n        return _c(\"div\", { key: todo.id, staticClass: \"todo-item\" }, [\n          _c(\"div\", { staticClass: \"todo-item-left\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: todo.completed,\n                  expression: \"todo.completed\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(todo.completed)\n                  ? _vm._i(todo.completed, null) > -1\n                  : todo.completed\n              },\n              on: {\n                change: function($event) {\n                  var $$a = todo.completed,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && _vm.$set(todo, \"completed\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          todo,\n                          \"completed\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(todo, \"completed\", $$c)\n                  }\n                }\n              }\n            }),\n            !todo.editing\n              ? _c(\n                  \"div\",\n                  {\n                    staticClass: \"todo-item-label\",\n                    class: { completed: todo.completed },\n                    on: {\n                      dblclick: function($event) {\n                        _vm.editTodo(todo)\n                      }\n                    }\n                  },\n                  [_vm._v(\"\\n            \" + _vm._s(todo.title))]\n                )\n              : _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: todo.title,\n                      expression: \"todo.title\"\n                    },\n                    { name: \"focus\", rawName: \"v-focus\" }\n                  ],\n                  staticClass: \"todo-item-edit\",\n                  attrs: { type: \"text\" },\n                  domProps: { value: todo.title },\n                  on: {\n                    blur: function($event) {\n                      _vm.doneEdit(todo)\n                    },\n                    keyup: [\n                      function($event) {\n                        if (\n                          !(\"button\" in $event) &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        _vm.doneEdit(todo)\n                      },\n                      function($event) {\n                        if (\n                          !(\"button\" in $event) &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"esc\",\n                            27,\n                            $event.key,\n                            \"Escape\"\n                          )\n                        ) {\n                          return null\n                        }\n                        _vm.cancelEdit(todo)\n                      }\n                    ],\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(todo, \"title\", $event.target.value)\n                    }\n                  }\n                })\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"remove-item\",\n              on: {\n                click: function($event) {\n                  _vm.removeTodo(index)\n                }\n              }\n            },\n            [_vm._v(\"\\n          Ã—\\n        \")]\n          )\n        ])\n      }),\n      _c(\"div\", { staticClass: \"extra-container\" }, [\n        _c(\"div\", [\n          _c(\"label\", [\n            _c(\"input\", {\n              attrs: { type: \"checkbox\" },\n              domProps: { checked: !_vm.anyRemaining },\n              on: { change: _vm.checkAllTodos }\n            }),\n            _vm._v(\" Check All\")\n          ])\n        ]),\n        _c(\"div\", [_vm._v(_vm._s(_vm.remaining) + \" items left\")])\n      ]),\n      _c(\"div\", { staticClass: \"extra-container\" }, [\n        _c(\"div\", [\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter === \"all\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"all\"\n                }\n              }\n            },\n            [_vm._v(\" All\")]\n          ),\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter === \"active\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"active\"\n                }\n              }\n            },\n            [_vm._v(\"Active\")]\n          ),\n          _c(\n            \"button\",\n            {\n              class: { active: _vm.filter === \"completed\" },\n              on: {\n                click: function($event) {\n                  _vm.filter = \"completed\"\n                }\n              }\n            },\n            [_vm._v(\"Completed\")]\n          )\n        ]),\n        _c(\"div\", [_vm._v(\"\\n        Clear Completed\\n      \")])\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}